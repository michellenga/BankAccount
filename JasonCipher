package lab9;

/**
 *
 * @author michelle
 */
public class JasonCipher implements Cipher{
    public JasonCipher(){
        
    }
     @Override
    public String encrypt(String plainText) {
        String firstHalf;
        String secondHalf;
        if (plainText.length() % 2 == 0) {
            firstHalf = plainText.substring(0, plainText.length() / 2);
            secondHalf = plainText.substring(plainText.length() / 2);
        } else {
            firstHalf = plainText.substring(0, (plainText.length() / 2) + 1);
            secondHalf = plainText.substring((plainText.length() / 2) + 1);
        }
        firstHalf = new StringBuffer(firstHalf).reverse().toString();
        secondHalf = new CaesarCipher(5).encrypt(secondHalf);
        String encryptedString = String.join("", firstHalf, secondHalf);
        return encryptedString.toLowerCase();
    }

    @Override
    public String decrypt(String encryptedText) {
        String firstHalf;
        String secondHalf;
        if (encryptedText.length() % 2 == 0) {
            firstHalf = encryptedText.substring(0, encryptedText.length() / 2);
            secondHalf = encryptedText.substring(encryptedText.length() / 2);
        } else {
            firstHalf = encryptedText.substring(0, (encryptedText.length() / 2) + 1);
            secondHalf = encryptedText.substring((encryptedText.length() / 2) + 1);
        }
        firstHalf = new StringBuffer(firstHalf).reverse().toString();
        secondHalf = new CaesarCipher(-5).encrypt(secondHalf);
        String plainString = String.join("", firstHalf, secondHalf);
        return plainString.toLowerCase();
    }
}
